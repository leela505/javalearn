create spring boot web Application CRUD for User Management System
----------------------------------------------------------------------------------------------
Required Files Are
------------------------
1. User.java   (@Entity+@Table+@Id+@Column)
2. UserRepo.java (I)  --> @Repository
3. UserController.java   --> @Controller
4. application.properties  --> port no+viewResolver+DbConn+Hdailect Properties
5. Application.java    --> @SpringBootApplication
6. Views Files 
      a) userreg.jsp
      b) userview.jsp
      c) userupdate.jsp
      d)home.jsp
===================================
Required Jars Are
-----------------------------------------------------------
1. Spring web
2. Spring Data Jpa
3. Spring Boot DevTools
4. MySqlDriver(MySql Connector/ Oracle Driver  (ojdbc6.jar)
5. tomcat japer
6. javax.servlet
7. javax.servlet.jsp.jstl-api
8. taglibs
------------------------------------------------------------------
User.java
-------------------
@Entity
public class User {

	@Id
	private int id;
	private String name;
	private String password;
	private String email;
	private String gender;
	private String country;
	//PDC+PPC+PSM+PGM+toString()
}
==================================================
UserRepo.java
---------------------------------
package com.web.repo;

import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;

import com.web.model.User;

@Repository
public interface UserRepo extends CrudRepository<User, Integer> {

}

====================================================
UserController.java
-----------------------------
package com.web.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.web.model.User;
import com.web.repo.UserRepo;

@Controller
public class UserController {
	
	@Autowired
	private UserRepo repo;
	

	@RequestMapping("/")
	public String home()
	{
		return "home";
	}
	@RequestMapping("/req1")
	public String regHome()
	{
		return "reg";
	}
	@RequestMapping(value="/register", method=RequestMethod.POST)
	public String saveUser(@RequestParam int id,
			@RequestParam String name,
			@RequestParam String password,
			@RequestParam String email,
			@RequestParam String gender,
			@RequestParam String country,User user,Model model)
	{
		
		repo.save(user);
		return "sucess";
	}
	
	 /* It provides list of Users in model object */    
    @RequestMapping(value="/views",method=RequestMethod.GET)    
    public String viewAllUser(Model model){    
        model.addAttribute("users",repo.findAll());
        return "viewUser";   
    } 
    
    @RequestMapping(value="/delete/{id}",
    		method=RequestMethod.GET)
    public String deleteUser(@PathVariable int id)
    {
    	repo.deleteById(id);
    	 return "redirect:/viewUser"; 
    }
    
}

==================================================
application.properties
--------------------------
server.port:9000

#View Resolvercode
spring.mvc.view.prefix=/views/
spring.mvc.view.suffix=.jsp

# Database related properties
spring.datasource.url=jdbc:mysql://localhost:3306/pq2pmdb?useSSL=false&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root

# Jpa properties/ HB related properties
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
===================================================
home.jsp
-----------------
<center>
<h1 style="color:red">CRUD APPLICATION FOR USER</h1>
<a href="/req1">Add New User</a><p></p>
<a href="/views">ViewUsers</a><p></p>
</center>
==================================================
reg.jsp
------------
<h1 style="color:green">Add New User</h1>
<form action="/register" method="POST">
Id:<input type="text" name="id"><p></p>
Name:<input type="text" name="name"><p></p>
Password:<input type="text" name="password"><p></p>
Email:<input type="text" name="email"><p></p>
Gender:<input type="radio" name="gender" value="male">Male
<input type="radio" name="gender" value="female">Female<p></p>
Country:<select name="country">
<option value="India">India</option>
<option value="USA">USA</option>
<option value="Canada">Canada</option>
<option value="Australia">Australia</option>
</select><p></p>
<input type="submit" value="Add User">
</form>
===================================================
viewUser.jsp
--------------------------
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>    
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>    
<h1>User Details</h1>  
<table border="2" width="70%" cellpadding="2">  
<tr>
    <th>Id</th>
    <th>Name</th>
    <th>Password</th>
    <th>Email</th>
     <th>Gender</th>
      <th>Country</th>
      <th>Delete</th>
      <th>Edit</th>
    </tr>
   <c:forEach var="user" items="${users}">   
   <tr>  
   <td>${user.id}</td>  
   <td>${user.name}</td> 
   <td>${user.password}</td>   
   <td>${user.email}</td>  
   <td>${user.gender}</td> 
   <td>${user.country}</td> 
   <td><a href="/delete/${user.id}">Delete</a></td>
   <td><a href="/edit/${user.id}">Edit</a></td>
    </tr>  
   </c:forEach>  
   </table>  
  
   </body>
======================================
success.jsp
-----------------------

New User Register Successfully.......
===============================================
pom.xml
-----------------

<!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jasper -->
<dependency>
    <groupId>org.apache.tomcat</groupId>
    <artifactId>tomcat-jasper</artifactId>
    <version>9.0.71</version>
</dependency>
<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
<dependency>
    <groupId>com.mysql</groupId>
    <artifactId>mysql-connector-j</artifactId>
    <version>8.0.31</version>
</dependency>
<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
    <groupId>javax.servlet.jsp.jstl</groupId>
    <artifactId>javax.servlet.jsp.jstl-api</artifactId>
    <version>1.2.1</version>
</dependency>
<dependency>
    <groupId>taglibs</groupId>
    <artifactId>standard</artifactId>
    <version>1.1.2</version>
</dependency>
 
============================================================
output
---------------
mysql> select *from user;
+-----+---------+-----------------+--------+------+----------+
| id  | country | email           | gender | name | password |
+-----+---------+-----------------+--------+------+----------+
| 102 | USA     | ram@gmail.com   | male   | ram  | ram123   |
| 103 | Canada  | aryan@gmail.com | male   | asdf | asdf     |
+-----+---------+-----------------+--------+------+----------+
2 rows in set (0.02 sec)
===========================================================